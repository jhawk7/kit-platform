extend schema
    @link(
        url: "https://specs.apollo.dev/federation/v2.3"
        import: ["@key", "@interfaceObject", "@external"]
    )

type Query {
    "Gets all activity for a user or by content type"
    userActivity(params: UserActivityInput!): UserActivity
    "Gets user activity for given content type and ID"
    userActivityByContentId(params: UserContentInput!): UserActivity
    "Gets user bookmarked content by content type"
    userBookmarks(params: UserBookmarkInput!): UserBookmarks
    "Gets all user activity for specific content type and ID"
    contentActivity(params: ContentActivityInput!): ContentActivity
}

input UserActivityInput {
    "The user's ID"
    userId: ID! 
    "The type of content to query (ARTICLE, VIDEO, or QUIZ); leave blank to select all"
    contentType: ContentType
}

input UserContentInput {
    "The user's ID"
    userId: ID!
    "The type of content to query (ARTICLE, VIDEO, or QUIZ)"
    contentType: ContentType!
    "The content's ID"
    contentId: ID!
}

input UserBookmarkInput {
    "The user's ID"
    userId: ID!
    "The type of content to query (ARTICLE, VIDEO, or QUIZ); leave blank to select all"
    contentType: ContentType
}

input ContentActivityInput {
    "The content's ID"
    contentId: ID!
    "The type of content to query (ARTICLE, VIDEO, or QUIZ)"
    contentType: ContentType!
}

enum ContentType {
    ARTICLE
    VIDEO
    QUIZ
}

# A User's Activity across all resources
type UserActivity {
    userId: ID!
    userArticles: [UserArticleInteraction]
    userVideos: [UserVideoInteraction]
    userQuizzes: [UserQuizInteraction]
}

type ContentActivity {
    articleInteractions: [UserArticleInteraction]
    videoInteractions: [UserVideoInteraction]
    quizInteractions: [UserQuizInteraction]
}

type UserBookmarks {
    userId: ID!
    userArticleBookmarks: [Article]
    userVideoBookmarks: [Video]
    userQuizBookmarks: [Quiz]
}

# This is a required "stub" of the Article entity
extend type Article @key(fields: "id") {
  id: ID! @external
}

# This is a required "stub" of the Video entity
extend type Video @key(fields: "id") {
  id: ID! @external
}

# This is a required "stub" of the Article entity
extend type Quiz @key(fields: "id") {
  id: ID! @external
}

enum Progress {
    ASSIGNED
    INPROGRESS
    COMPLETED
}

type UserArticleInteraction {
  interactionId: ID
  userId: ID!
  articleId: ID!
  bookmarked: Boolean
  progress: Progress
  completed: Boolean
  lastAccessed: String
  screentimeSec: Int
}

type UserVideoInteraction {
  interactionId: ID
  userId: ID!
  videoId: ID!
  bookmarked: Boolean
  progress: Progress
  completed: Boolean
  lastAccessed: String
  lastVideoTimeStamp: String
  lastVideoTimeStampSec: Int
}

type UserQuizInteraction {
  interactionId: ID
  userId: ID!
  quizId: ID!
  bookmarked: Boolean
  progress: Progress
  completed: Boolean
  lastAccessed: String
  submitted: Boolean
}
